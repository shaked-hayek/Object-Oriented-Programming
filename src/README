shaked.hayek
shirlevy


#################################################
############ Questions from exercise ############
#################################################

## Exceptions - report in your README file
   how you handled s-Java code errors in this exercise, and why you chose to do so

## OOP - You are required to specify your design, as well as your thinking process and the alternatives you
         ruled out, in your README file.

## How would you modify your code to add new types of variables (e.g., float)?
If we wanted to add a new type of variable, all we had to do was add to the Enum (VarType) the name of the
type, and add to the class VarTypeFactory the new type - that would require:
 * Adding the type to the switch statement in the getType method
 * Adding a regex pattern that checks a valid value to this type
 * Adding the getValValidationFunc method a lambda expression that checks this regex
This is an implementation of the Single Choice principle, because there is only one main object that knows
all of the different types. Adding a new type requires change in that class alone.
The types doesn't appear anywhere else in the project, besides the class VarTypeFactory and the enum VarType.

   ## describe which modifications/extensions you would have to make in your code
      in order to support them. Please briefly describe which classes you would add to your code,
      which methods you would add to existing classes, and which classes you would modify

      # Using methods of standard java (i.e System.out.println).
      # Classes.

## REGEX -  please describe two of the main regular expressions you used in your code:


#####################################
############### TESTS ###############
#####################################

test 1: make sure we skip whitespaces and comments
test 2: make sure valid declaration and initialization of non-final variables
test 3: make sure variable names are valid
test 4: make sure final initialization is valid for all types
test 5: make sure a function is able to get a final variable
test 6: make sure double value is valid for boolean variable
test 7: make sure int value is valid for boolean variable
test 8: make sure int value is valid for double variable
test 9: make sure String initialization is valid (with spaces and signs)
test 10: make sure assignment of declared String and int in same line is valid.
test 11: make sure all options of double are valid
test 12: make sure name of variable and function is the same - valid
test 13: make sure global variable is initialized only after a function where it's used - valid
test 14: make sure functions calls are valid
test 15: make sure function recursive calls are valid
test 16: make sure conditions in if are valid
test 17: make sure conditions with "||" (or) and "&&" (and)
test 18: make sure return in function is valid as long as there's return statement in the last line of it
test 19: make sure while scope inside of if scope many times is valid
test 20: make sure same variable name for variables in different scopes is valid



-----------
We chose to print the error with the name of the Exception class to make it easier for users
to find the error

Can extend method to also be under different scopes (other than global)

We compile regex patterns only once for efficiency.
Open closed prinsable
